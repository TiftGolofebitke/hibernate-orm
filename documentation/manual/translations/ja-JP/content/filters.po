#, fuzzy
msgid ""
msgstr ""
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Content-Type: text/plain; charset=utf-8\n"
#: index.docbook:5
msgid "Filtering data"
msgstr "データのフィルタリング"

#: index.docbook:7
msgid "Hibernate3 provides an innovative new approach to handling data with \"visibility\" rules. A <emphasis>Hibernate filter</emphasis> is a global, named, parameterized filter that may be enabled or disabled for a particular Hibernate session."
msgstr "Hibernate3では「可視性」ルールに基づいてデータを扱うための画期的な方法を用意しています。 <emphasis>Hibernate filter</emphasis> はグローバルで、名前付きで、パラメータ化されたフィルタです。 これはHibernateセッションごとに有効無効を切り替えられます。"

#: index.docbook:14
msgid "Hibernate filters"
msgstr "Hibernateのフィルタ"

#: index.docbook:16
msgid "Hibernate3 adds the ability to pre-define filter criteria and attach those filters at both a class and a collection level. A filter criteria is the ability to define a restriction clause very similiar to the existing \"where\" attribute available on the class and various collection elements. Except these filter conditions can be parameterized. The application can then make the decision at runtime whether given filters should be enabled and what their parameter values should be. Filters can be used like database views, but parameterized inside the application."
msgstr "Hibernate3はフィルタクライテリアをあらかじめ定義し、 これらのフィルタをクラスやコレクションレベルに加える機能を加えました。 フィルタクライテリアは制約節を定義する機能です。 これらのフィルタ条件はパラメータ化できるということを除き、 クラスやさまざまなコレクション要素で利用可能な｢where｣句に非常によく似ています。 アプリケーションは、与えられたフィルタを可能にすべきか、 そしてそのパラメータ値を何にすべきかを実行時に決定することができます。 フィルタはデータベースビューのように使用されますが、アプリケーション内ではパラメータ化されます。"

#: index.docbook:26
msgid "In order to use filters, they must first be defined and then attached to the appropriate mapping elements. To define a filter, use the <literal>&lt;filter-def/&gt;</literal> element within a <literal>&lt;hibernate-mapping/&gt;</literal> element:"
msgstr "フィルタを使うためにはまず、適切なマッピング要素に定義、追加しなくてはなりません。 フィルタを定義するためには、 <literal>&lt;hibernate-mapping/&gt;</literal> 要素内で <literal>&lt;filter-def/&gt;</literal> 要素を使用します。："

#: index.docbook:32
msgid ""
      "<![CDATA[<filter-def name=\"myFilter\">\n"
      "    <filter-param name=\"myFilterParam\" type=\"string\"/>\n"
      "</filter-def>]]>"
msgstr ""
      "<![CDATA[<filter-def name=\"myFilter\">\n"
      "    <filter-param name=\"myFilterParam\" type=\"string\"/>\n"
      "</filter-def>]]>"

#: index.docbook:34
msgid "Then, this filter can be attached to a class:"
msgstr "そうしてフィルタはクラスへと結び付けられます。："

#: index.docbook:38
msgid ""
      "<![CDATA[<class name=\"myClass\" ...>\n"
      "    ...\n"
      "    <filter name=\"myFilter\" condition=\":myFilterParam = MY_FILTERED_COLUMN\"/>\n"
      "</class>]]>"
msgstr ""
      "<![CDATA[<class name=\"myClass\" ...>\n"
      "    ...\n"
      "    <filter name=\"myFilter\" condition=\":myFilterParam = MY_FILTERED_COLUMN\"/>\n"
      "</class>]]>"

#: index.docbook:40
msgid "or, to a collection:"
msgstr "また、コレクションに対しては次のようになります。："

#: index.docbook:44
msgid ""
      "<![CDATA[<set ...>\n"
      "    <filter name=\"myFilter\" condition=\":myFilterParam = MY_FILTERED_COLUMN\"/>\n"
      "</set>]]>"
msgstr ""
      "<![CDATA[<set ...>\n"
      "    <filter name=\"myFilter\" condition=\":myFilterParam = MY_FILTERED_COLUMN\"/>\n"
      "</set>]]>"

#: index.docbook:46
msgid "or, even to both (or multiples of each) at the same time."
msgstr "どちらに対しても(また、それぞれを複数)同時に設定することもできます。"

#: index.docbook:50
msgid "The methods on <literal>Session</literal> are: <literal>enableFilter(String filterName)</literal>, <literal>getEnabledFilter(String filterName)</literal>, and <literal>disableFilter(String filterName)</literal>. By default, filters are <emphasis>not</emphasis> enabled for a given session; they must be explcitly enabled through use of the <literal>Session.enabledFilter()</literal> method, which returns an instance of the <literal>Filter</literal> interface. Using the simple filter defined above, this would look like:"
msgstr "<literal>Session</literal> 上のメソッドは <literal>enableFilter(String filterName)</literal>, <literal>getEnabledFilter(String filterName)</literal>, <literal>disableFilter(String filterName)</literal> です。 デフォルトでは、フィルタは与えられたセッションに対して使用 <emphasis>できません</emphasis> 。 <literal>Filter</literal> インスタンスを返り値とする <literal>Session.enabledFilter()</literal> メソッドを使うことで、 フィルタは明示的に使用可能となります。 上で定義した単純なフィルタの使用は、このようになります。："

#: index.docbook:59
msgid "<![CDATA[session.enableFilter(\"myFilter\").setParameter(\"myFilterParam\", \"some-value\");]]>"
msgstr "<![CDATA[session.enableFilter(\"myFilter\").setParameter(\"myFilterParam\", \"some-value\");]]>"

#: index.docbook:61
msgid "Note that methods on the org.hibernate.Filter interface do allow the method-chaining common to much of Hibernate."
msgstr "org.hibernate.Filterインターフェイスのメソッドは、 Hibernateの多くに共通しているメソッド連鎖を許していることに注意してください。"

#: index.docbook:65
msgid "A full example, using temporal data with an effective record date pattern:"
msgstr "有効なレコードデータパターンを持つ一時データを使った完全な例です："

#: index.docbook:69
msgid ""
      "<![CDATA[<filter-def name=\"effectiveDate\">\n"
      "    <filter-param name=\"asOfDate\" type=\"date\"/>\n"
      "</filter-def>\n"
      "\n"
      "<class name=\"Employee\" ...>\n"
      "...\n"
      "    <many-to-one name=\"department\" column=\"dept_id\" class=\"Department\"/>\n"
      "    <property name=\"effectiveStartDate\" type=\"date\" column=\"eff_start_dt\"/>\n"
      "    <property name=\"effectiveEndDate\" type=\"date\" column=\"eff_end_dt\"/>\n"
      "...\n"
      "    <!--\n"
      "        Note that this assumes non-terminal records have an eff_end_dt set to\n"
      "        a max db date for simplicity-sake\n"
      "    -->\n"
      "    <filter name=\"effectiveDate\"\n"
      "            condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Department\" ...>\n"
      "...\n"
      "    <set name=\"employees\" lazy=\"true\">\n"
      "        <key column=\"dept_id\"/>\n"
      "        <one-to-many class=\"Employee\"/>\n"
      "        <filter name=\"effectiveDate\"\n"
      "                condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/>\n"
      "    </set>\n"
      "</class>]]>"
msgstr ""
      "<![CDATA[<filter-def name=\"effectiveDate\">\n"
      "    <filter-param name=\"asOfDate\" type=\"date\"/>\n"
      "</filter-def>\n"
      "\n"
      "<class name=\"Employee\" ...>\n"
      "...\n"
      "    <many-to-one name=\"department\" column=\"dept_id\" class=\"Department\"/>\n"
      "    <property name=\"effectiveStartDate\" type=\"date\" column=\"eff_start_dt\"/>\n"
      "    <property name=\"effectiveEndDate\" type=\"date\" column=\"eff_end_dt\"/>\n"
      "...\n"
      "    <!--\n"
      "        Note that this assumes non-terminal records have an eff_end_dt set to\n"
      "        a max db date for simplicity-sake\n"
      "        \n"
      "\n"
      "    -->\n"
      "    <filter name=\"effectiveDate\"\n"
      "            condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Department\" ...>\n"
      "...\n"
      "    <set name=\"employees\" lazy=\"true\">\n"
      "        <key column=\"dept_id\"/>\n"
      "        <one-to-many class=\"Employee\"/>\n"
      "        <filter name=\"effectiveDate\"\n"
      "                condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/>\n"
      "    </set>\n"
      "</class>]]>"

#: index.docbook:71
msgid "Then, in order to ensure that you always get back currently effective records, simply enable the filter on the session prior to retrieving employee data:"
msgstr "常に現在の有効レコードを返却することを保証するために、 単純に、社員データの検索より前にセッション上のフィルタを有効にします。"

#: index.docbook:76
msgid ""
      "<![CDATA[Session session = ...;\n"
      "session.enabledFilter(\"effectiveDate\").setParameter(\"asOfDate\", new Date());\n"
      "List results = session.createQuery(\"from Employee as e where e.salary > :targetSalary\")\n"
      "         .setLong(\"targetSalary\", new Long(1000000))\n"
      "         .list();\n"
      "]]>"
msgstr ""
      "<![CDATA[Session session = ...;\n"
      "session.enabledFilter(\"effectiveDate\").setParameter(\"asOfDate\", new Date());\n"
      "List results = session.createQuery(\"from Employee as e where e.salary > :targetSalary\")\n"
      "         .setLong(\"targetSalary\", new Long(1000000))\n"
      "         .list();\n"
      "]]>"

#: index.docbook:78
msgid "In the HQL above, even though we only explicitly mentioned a salary constraint on the results, because of the enabled filter the query will return only currently active employees who have a salary greater than a million dollars."
msgstr "上記のHQLでは、結果の給料の制約について明示的に触れただけですが、 有効になっているフィルタのおかげで、このクエリは給料が100万ドル以上の現役の社員だけを返します。"

#: index.docbook:84
msgid "Note: if you plan on using filters with outer joining (either through HQL or load fetching) be careful of the direction of the condition expression. Its safest to set this up for left outer joining; in general, place the parameter first followed by the column name(s) after the operator."
msgstr "(HQLかロードフェッチで）外部結合を持つフィルタを使うつもりなら、 条件式の方向に注意してください。 これは左外部結合のために設定するのが最も安全です。 一般的に、演算子の後カラム名に続けて最初のパラメータを配置してください。"

#: index.docbook:91
msgid "After being defined a filter might be attached to multiple entities and/or collections each with its own condition. That can be tedious when the conditions are the same each time. Thus <literal>&lt;filter-def/&gt;</literal> allows defining a default condition, either as an attribute or CDATA:"
msgstr ""

#: index.docbook:98
msgid ""
      "<![CDATA[<filter-def name=\"myFilter\" condition=\"abc > xyz\">...</filter-def>\n"
      "<filter-def name=\"myOtherFilter\">abc=xyz</filter-def>]]>"
msgstr ""

#: index.docbook:100
msgid "This default condition will then be used whenever the filter is attached to something without specifying a condition. Note that this means you can give a specific condition as part of the attachment of the filter which overrides the default condition in that particular case."
msgstr ""

msgid "ROLES_OF_TRANSLATORS"
msgstr "<!--TRANS:ROLES_OF_TRANSLATORS-->"

msgid "CREDIT_FOR_TRANSLATORS"
msgstr "<!--TRANS:CREDIT_FOR_TRANSLATORS-->"

