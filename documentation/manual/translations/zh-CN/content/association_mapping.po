#, fuzzy
msgid ""
msgstr ""
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Content-Type: text/plain; charset=utf-8\n"
#: index.docbook:6
msgid "Association Mappings"
msgstr ""

#: index.docbook:9
msgid "Introduction"
msgstr ""

#: index.docbook:11
msgid "Association mappings are the often most difficult thing to get right. In this section we'll go through the canonical cases one by one, starting with unidirectional mappings, and then considering the bidirectional cases. We'll use <literal>Person</literal> and <literal>Address</literal> in all the examples."
msgstr ""

#: index.docbook:19
msgid "We'll classify associations by whether or not they map to an intervening join table, and by multiplicity."
msgstr ""

#: index.docbook:24
msgid "Nullable foreign keys are not considered good practice in traditional data modelling, so all our examples use not null foreign keys. This is not a requirement of Hibernate, and the mappings will all work if you drop the nullability constraints."
msgstr ""

#: index.docbook:34
msgid "Unidirectional associations"
msgstr ""

#: index.docbook:37, index.docbook:108
msgid "many to one"
msgstr ""

#: index.docbook:39
msgid "A <emphasis>unidirectional many-to-one association</emphasis> is the most common kind of unidirectional association."
msgstr ""

#: index.docbook:44
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:45, index.docbook:161
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key, addressId bigint not null )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:50, index.docbook:121, index.docbook:185, index.docbook:225
msgid "one to one"
msgstr ""

#: index.docbook:52
msgid "A <emphasis>unidirectional one-to-one association on a foreign key</emphasis> is almost identical. The only difference is the column unique constraint."
msgstr ""

#: index.docbook:57
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\" \n"
      "        unique=\"true\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:58, index.docbook:193
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key, addressId bigint not null unique )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:60
msgid "A <emphasis>unidirectional one-to-one association on a primary key</emphasis> usually uses a special id generator. (Notice that we've reversed the direction of the association in this example.)"
msgstr ""

#: index.docbook:66
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"foreign\">\n"
      "            <param name=\"property\">person</param>\n"
      "        </generator>\n"
      "    </id>\n"
      "    <one-to-one name=\"person\" constrained=\"true\"/>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:67, index.docbook:201
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table Address ( personId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:72, index.docbook:94
msgid "one to many"
msgstr ""

#: index.docbook:74
msgid "A <emphasis>unidirectional one-to-many association on a foreign key</emphasis> is a very unusual case, and is not really recommended."
msgstr ""

#: index.docbook:79
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\">\n"
      "        <key column=\"personId\" \n"
      "            not-null=\"true\"/>\n"
      "        <one-to-many class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:80
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table Address ( addressId bigint not null primary key, personId bigint not null )\n"
      "        ]]>"
msgstr ""

#: index.docbook:82
msgid "We think it's better to use a join table for this kind of association."
msgstr ""

#: index.docbook:91
msgid "Unidirectional associations with join tables"
msgstr ""

#: index.docbook:96
msgid "A <emphasis>unidirectional one-to-many association on a join table</emphasis> is much preferred. Notice that by specifying <literal>unique=\"true\"</literal>, we have changed the multiplicity from many-to-many to one-to-many."
msgstr ""

#: index.docbook:102
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            unique=\"true\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:103
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId not null, addressId bigint not null primary key )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:110
msgid "A <emphasis>unidirectional many-to-one association on a join table</emphasis> is quite common when the association is optional."
msgstr ""

#: index.docbook:115
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"personId\" unique=\"true\"/>\n"
      "        <many-to-one name=\"address\"\n"
      "            column=\"addressId\" \n"
      "            not-null=\"true\"/>\n"
      "    </join>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:116
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null primary key, addressId bigint not null )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:123
msgid "A <emphasis>unidirectional one-to-one association on a join table</emphasis> is extremely unusual, but possible."
msgstr ""

#: index.docbook:128
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"personId\" \n"
      "            unique=\"true\"/>\n"
      "        <many-to-one name=\"address\"\n"
      "            column=\"addressId\" \n"
      "            not-null=\"true\"\n"
      "            unique=\"true\"/>\n"
      "    </join>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:129, index.docbook:233
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null primary key, addressId bigint not null unique )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:134, index.docbook:238
msgid "many to many"
msgstr ""

#: index.docbook:136
msgid "Finally, we have a <emphasis>unidirectional many-to-many association</emphasis>."
msgstr ""

#: index.docbook:140
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:141, index.docbook:246
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null, addressId bigint not null, primary key (personId, addressId) )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:148
msgid "Bidirectional associations"
msgstr ""

#: index.docbook:151, index.docbook:211
msgid "one to many / many to one"
msgstr ""

#: index.docbook:153
msgid "A <emphasis>bidirectional many-to-one association</emphasis> is the most common kind of association. (This is the standard parent/child relationship.)"
msgstr ""

#: index.docbook:159
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"people\" inverse=\"true\">\n"
      "        <key column=\"addressId\"/>\n"
      "        <one-to-many class=\"Person\"/>\n"
      "    </set>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:163
msgid "If you use a <literal>List</literal> (or other indexed collection) you need to set the <literal>key</literal> column of the foreign key to <literal>not null</literal>, and let Hibernate manage the association from the collections side to maintain the index of each element (making the other side virtually inverse by setting <literal>update=\"false\"</literal> and <literal>insert=\"false\"</literal>):"
msgstr ""

#: index.docbook:171
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "   <id name=\"id\"/>\n"
      "   ...\n"
      "   <many-to-one name=\"address\"\n"
      "      column=\"addressId\"\n"
      "      not-null=\"true\"\n"
      "      insert=\"false\"\n"
      "      update=\"false\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "   <id name=\"id\"/>\n"
      "   ...\n"
      "   <list name=\"people\">\n"
      "      <key column=\"addressId\" not-null=\"true\"/>\n"
      "      <list-index column=\"peopleIdx\"/>\n"
      "      <one-to-many class=\"Person\"/>\n"
      "   </list>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:173
msgid "It is important that you define <literal>not-null=\"true\"</literal> on the <literal>&lt;key&gt;</literal> element of the collection mapping if the underlying foreign key column is <literal>NOT NULL</literal>. Don't only declare <literal>not-null=\"true\"</literal> on a possible nested <literal>&lt;column&gt;</literal> element, but on the <literal>&lt;key&gt;</literal> element."
msgstr ""

#: index.docbook:187
msgid "A <emphasis>bidirectional one-to-one association on a foreign key</emphasis> is quite common."
msgstr ""

#: index.docbook:192
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\" \n"
      "        unique=\"true\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "   <one-to-one name=\"person\" \n"
      "        property-ref=\"address\"/>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:195
msgid "A <emphasis>bidirectional one-to-one association on a primary key</emphasis> uses the special id generator."
msgstr ""

#: index.docbook:200
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <one-to-one name=\"address\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"foreign\">\n"
      "            <param name=\"property\">person</param>\n"
      "        </generator>\n"
      "    </id>\n"
      "    <one-to-one name=\"person\" \n"
      "        constrained=\"true\"/>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:208
msgid "Bidirectional associations with join tables"
msgstr ""

#: index.docbook:213
msgid "A <emphasis>bidirectional one-to-many association on a join table</emphasis>. Note that the <literal>inverse=\"true\"</literal> can go on either end of the association, on the collection, or on the join."
msgstr ""

#: index.docbook:219
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" \n"
      "        table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            unique=\"true\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        inverse=\"true\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"addressId\"/>\n"
      "        <many-to-one name=\"person\"\n"
      "            column=\"personId\"\n"
      "            not-null=\"true\"/>\n"
      "    </join>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:220
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null, addressId bigint not null primary key )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#: index.docbook:227
msgid "A <emphasis>bidirectional one-to-one association on a join table</emphasis> is extremely unusual, but possible."
msgstr ""

#: index.docbook:232
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"personId\" \n"
      "            unique=\"true\"/>\n"
      "        <many-to-one name=\"address\"\n"
      "            column=\"addressId\" \n"
      "            not-null=\"true\"\n"
      "            unique=\"true\"/>\n"
      "    </join>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\"\n"
      "        inverse=\"true\">\n"
      "        <key column=\"addressId\" \n"
      "            unique=\"true\"/>\n"
      "        <many-to-one name=\"person\"\n"
      "            column=\"personId\" \n"
      "            not-null=\"true\"\n"
      "            unique=\"true\"/>\n"
      "    </join>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:240
msgid "Finally, we have a <emphasis>bidirectional many-to-many association</emphasis>."
msgstr ""

#: index.docbook:244
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"people\" inverse=\"true\" table=\"PersonAddress\">\n"
      "        <key column=\"addressId\"/>\n"
      "        <many-to-many column=\"personId\"\n"
      "            class=\"Person\"/>\n"
      "    </set>\n"
      "</class>]]>"
msgstr ""

#: index.docbook:253
msgid "More complex association mappings"
msgstr ""

#: index.docbook:255
msgid "More complex association joins are <emphasis>extremely</emphasis> rare. Hibernate makes it possible to handle more complex situations using SQL fragments embedded in the mapping document. For example, if a table with historical account information data defines <literal>accountNumber</literal>, <literal>effectiveEndDate</literal> and <literal>effectiveStartDate</literal>columns, mapped as follows:"
msgstr ""

#: index.docbook:264
msgid ""
      "<![CDATA[<properties name=\"currentAccountKey\">\n"
      "    <property name=\"accountNumber\" type=\"string\" not-null=\"true\"/>\n"
      "    <property name=\"currentAccount\" type=\"boolean\">\n"
      "        <formula>case when effectiveEndDate is null then 1 else 0 end</formula>\n"
      "    </property>\n"
      "</properties>\n"
      "<property name=\"effectiveEndDate\" type=\"date\"/>\n"
      "<property name=\"effectiveStateDate\" type=\"date\" not-null=\"true\"/>]]>"
msgstr ""

#: index.docbook:266
msgid "Then we can map an association to the <emphasis>current</emphasis> instance (the one with null <literal>effectiveEndDate</literal>) using:"
msgstr ""

#: index.docbook:271
msgid ""
      "<![CDATA[<many-to-one name=\"currentAccountInfo\" \n"
      "        property-ref=\"currentAccountKey\"\n"
      "        class=\"AccountInfo\">\n"
      "    <column name=\"accountNumber\"/>\n"
      "    <formula>'1'</formula>\n"
      "</many-to-one>]]>"
msgstr ""

#: index.docbook:273
msgid "In a more complex example, imagine that the association between <literal>Employee</literal> and <literal>Organization</literal> is maintained in an <literal>Employment</literal> table full of historical employment data. Then an association to the employee's <emphasis>most recent</emphasis> employer (the one with the most recent <literal>startDate</literal>) might be mapped this way:"
msgstr ""

#: index.docbook:281
msgid ""
      "<![CDATA[<join>\n"
      "    <key column=\"employeeId\"/>\n"
      "    <subselect>\n"
      "        select employeeId, orgId \n"
      "        from Employments \n"
      "        group by orgId \n"
      "        having startDate = max(startDate)\n"
      "    </subselect>\n"
      "    <many-to-one name=\"mostRecentEmployer\" \n"
      "            class=\"Organization\" \n"
      "            column=\"orgId\"/>\n"
      "</join>]]>"
msgstr ""

#: index.docbook:283
msgid "You can get quite creative with this functionality, but it is usually more practical to handle these kinds of cases using HQL or a criteria query."
msgstr ""

msgid "ROLES_OF_TRANSLATORS"
msgstr "<!--TRANS:ROLES_OF_TRANSLATORS-->"

msgid "CREDIT_FOR_TRANSLATORS"
msgstr "<!--TRANS:CREDIT_FOR_TRANSLATORS-->"

