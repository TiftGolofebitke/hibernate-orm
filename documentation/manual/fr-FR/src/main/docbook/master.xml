<?xml version='1.0' encoding="iso-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3CR3//EN"
                      "../support/docbook-dtd/docbookx.dtd"
[
<!ENTITY tutorial               SYSTEM "modules/tutorial.xml">
<!ENTITY architecture           SYSTEM "modules/architecture.xml">
<!ENTITY configuration          SYSTEM "modules/configuration.xml">
<!ENTITY persistent-classes     SYSTEM "modules/persistent_classes.xml">
<!ENTITY basic-mapping          SYSTEM "modules/basic_mapping.xml">
<!ENTITY collection-mapping     SYSTEM "modules/collection_mapping.xml">
<!ENTITY association-mapping    SYSTEM "modules/association_mapping.xml">
<!ENTITY component-mapping      SYSTEM "modules/component_mapping.xml">
<!ENTITY inheritance-mapping    SYSTEM "modules/inheritance_mapping.xml">
<!ENTITY session-api            SYSTEM "modules/session_api.xml">
<!ENTITY transactions           SYSTEM "modules/transactions.xml">
<!ENTITY events                 SYSTEM "modules/events.xml">
<!ENTITY batch                  SYSTEM "modules/batch.xml">
<!ENTITY query-hql              SYSTEM "modules/query_hql.xml">
<!ENTITY query-criteria         SYSTEM "modules/query_criteria.xml">
<!ENTITY query-sql              SYSTEM "modules/query_sql.xml">
<!ENTITY filters                SYSTEM "modules/filters.xml">
<!ENTITY xml                    SYSTEM "modules/xml.xml">
<!ENTITY performance            SYSTEM "modules/performance.xml">
<!ENTITY toolset-guide          SYSTEM "modules/toolset_guide.xml">
<!ENTITY example-parentchild    SYSTEM "modules/example_parentchild.xml">
<!ENTITY example-weblog         SYSTEM "modules/example_weblog.xml">
<!ENTITY example-mappings       SYSTEM "modules/example_mappings.xml">
<!ENTITY best-practices         SYSTEM "modules/best_practices.xml">
]>

<book lang="fr">

    <bookinfo>
        <title>HIBERNATE - Persistance relationnelle en Java standard</title>
        <subtitle>Documentation de référence d'Hibernate</subtitle>
        <releaseinfo>3.3.0.beta1</releaseinfo>
    </bookinfo>

    <toc/>

    <preface id="preface" revision="2">
        <title>Préface</title>
        <para>
            Traducteur(s): Vincent Ricard, Sebastien Cesbron, Michael Courcy, Vincent Giguère, Baptiste Mathus, Emmanuel Bernard, Anthony Patricio
        </para>
        <para>
            Travailler dans les deux univers que sont l'orienté objet et la base de données
            relationnelle peut être lourd et consommateur en temps dans le monde de
            l'entreprise d'aujourd'hui. Hibernate est un outil de  mapping objet/relationnel
            pour le monde Java. Le terme mapping objet/relationnel (ORM) décrit la technique
            consistant à faire le lien entre la représentation objet des données
            et sa représentation relationnelle basée sur un schéma SQL.
        </para>

        <para>
            Non seulement, Hibernate s'occupe du transfert des classes Java dans les tables
            de la base de données (et des types de données Java dans les types de données SQL),
            mais il permet de requêter les données et propose des moyens de les récupérer.
            Il peut donc réduire de manière significative le temps de développement qui
            aurait été autrement perdu dans une manipulation manuelle des données via SQL
            et JDBC.
        </para>

        <para>
            Le but d'Hibernate est de libérer le développeur de 95 pourcent des tâches de
            programmation liées à la persistance des données communes. Hibernate n'est
            probablement pas la meilleure solution pour les applications centrées sur les
            données qui n'utilisent que les procédures stockées pour implémenter la logique
            métier dans la base de données, il est le plus utile dans les modèles métier orientés
            objets dont la logique métier est implémentée dans la couche Java dite intermédiaire.
            Cependant, Hibernate vous aidera à supprimer ou à encapsuler le code SQL
            spécifique à votre base de données et vous aidera sur la tâche commune qu'est
            la transformation des données d'une représentation tabulaire à une
            représentation sous forme de graphe d'objets.
        </para>

        <para>
            Si vous êtes nouveau dans Hibernate et le mapping Objet/Relationnel voire même en Java,
            suivez ces quelques étapes :
        </para>

        <orderedlist>
            <listitem>
                <para>
                    Lisez <xref linkend="tutorial"/> pour un didacticiel plus long avec plus d'instructions étape par étape.
                </para>
            </listitem>
            <listitem>
                <para>
                    Lisez <xref linkend="architecture"/> pour comprendre les environnements dans lesquels
                    Hibernate peut être utilisé.
                </para>
            </listitem>
            <listitem>
                <para>
                    Regardez le répertoire <literal>eg</literal> de la distribution Hibernate, il contient
                    une application simple et autonome. Copiez votre pilote JDBC dans le répertoire
                    <literal>lib/</literal> et éditez <literal>src/hibernate.properties</literal>, en
                    positionnant correctement les valeurs pour votre base de données. A partir d'une
                    invite de commande dans le répertoire de la distribution, tapez <literal>ant eg</literal>
                    (cela utilise Ant), ou sous Windows tapez <literal>build eg</literal>.
                </para>
            </listitem>
            <listitem>
                <para>
                    Faîtes de cette documentation de référence votre principale source d'information.
                    Pensez à lire <emphasis>Java Persistence with Hibernate</emphasis>
                    (http://www.manning.com/bauer2) si vous avez besoin de plus d'aide avec le design
                    d'applications ou si vous préférez un tutoriel pas à pas. Visitez aussi
                    http://caveatemptor.hibernate.org et téléchargez l'application exemple
                    pour Java Persistence with Hibernate.
                </para>
            </listitem>
            <listitem>
                <para>
                    Les questions les plus fréquemment posées (FAQs) trouvent leur réponse sur le
                    site web Hibernate.
                </para>
            </listitem>
            <listitem>
                <para>
                    Des démos, exemples et tutoriaux de tierces personnes sont référencés sur
                    le site web Hibernate.
                </para>
            </listitem>
            <listitem>
                <para>
                    La zone communautaire (Community Area) du site web Hibernate est une
                    bonne source d'information sur les design patterns et sur différentes
                    solutions d'intégration d'Hibernate (Tomcat, JBoss, Spring Framework, Struts,
                    EJB, etc).
                </para>
            </listitem>
         </orderedlist>

         <para>
             Si vous avez des questions, utilisez le forum utilisateurs du site web Hibernate.
             Nous utilisons également l'outil de gestion des incidents JIRA pour tout ce qui
             est rapports de bogue et demandes d'évolution. Si vous êtes intéressé par le
             développement d'Hibernate, joignez-vous à la liste de diffusion de développement.
         </para>

         <para>
             Le développement commercial, le support de production et les formations à Hibernate
             sont proposés par JBoss Inc (voir http://www.hibernate.org/SupportTraining/). Hibernate
             est un projet Open Source professionnel et un composant critique de la suite de produits
             JBoss Enterprise Middleware System (JEMS).
         </para>

     </preface>

    &tutorial;

    &architecture;

    &configuration;

    &persistent-classes;

    &basic-mapping;
    &collection-mapping;
    &association-mapping;
    &component-mapping;
    &inheritance-mapping;

    &session-api;
    &transactions;
    &events;
    &batch;

    &query-hql;
    &query-criteria;
    &query-sql;
    &filters;
    &xml;

    &performance;

    &toolset-guide;

    &example-parentchild;
    &example-weblog;
    &example-mappings;

    &best-practices;

</book>

