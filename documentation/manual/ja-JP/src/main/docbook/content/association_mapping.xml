<?xml version="1.0" encoding="Shift_JIS"?>
<chapter id="associations">

    <title>関連マッピング</title>

    <sect1 id="assoc-intro" revision="1">
        <title>イントロダクション</title>
        
        <para>
            関連マッピングはしばしば理解が最も難しいものになります。
            この章では、基本的な一つ一つのケースについて述べます。
            単方向のマッピングから始め、それから双方向のケースについて考えていきます。
            例として、<literal>Person</literal> と <literal>Address</literal> を用います。
        </para>
        
        <para>
                関連は、結合テーブルを入れるかかどうかと、
                多重度によって分類することにします。
        </para>
        
        <para>
                すべての例でnot nullの外部キーを使用します。
                これはHibernateの要件ではありません。
                not null制約を外したとしても、マッピングは問題なく動作します。
        </para>
        
    </sect1>

    <sect1 id="assoc-unidirectional" revision="1">
        <title>単方向関連</title>
        
        <sect2 id="assoc-unidirectional-m21">
        <title>多対一</title>
        
        <para>
            <emphasis>単方向多対一関連</emphasis> は単方向関連の中で最も一般的なものです。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <many-to-one name="address" 
        column="addressId"
        not-null="true"/>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key, addressId bigint not null )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>

        <sect2 id="assoc-unidirectional-121">
        <title>一対一</title>
        
        <para>
            <emphasis>外部キーの単方向一対一関連</emphasis> はほとんど同じものです。
            唯一違うのは、カラムのユニークな制約です。
        </para>
        
       <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <many-to-one name="address" 
        column="addressId" 
        unique="true"
        not-null="true"/>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key, addressId bigint not null unique )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        <para>
            <emphasis>主キーの単方向一対一関連</emphasis> は通常、特別なIDジェネレータを使います。
            （この例では関連の方向が逆になっていることに注意してください）
        </para>
        
       <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
</class>

<class name="Address">
    <id name="id" column="personId">
        <generator class="foreign">
            <param name="property">person</param>
        </generator>
    </id>
    <one-to-one name="person" constrained="true"/>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table Address ( personId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>
        
        <sect2 id="assoc-unidirectional-12m">
        <title>一対多</title>
        
        <para>
            <emphasis>外部キーの単方向一対多関連</emphasis> はとても特殊なケースで、
            あまり推奨されていません。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <set name="addresses">
        <key column="personId" 
            not-null="true"/>
        <one-to-many class="Address"/>
    </set>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table Address ( addressId bigint not null primary key, personId bigint not null )
        ]]></programlisting>
        
        <para>
            このような関連のために結合テーブルを使うことをお薦めします。
        </para>
        
        </sect2>
    
    </sect1>

    <sect1 id="assoc-unidirectional-join" revision="1">
        <title>結合テーブルを使った単方向関連</title>
        
        <sect2 id="assoc-unidirectional-join-12m">
        <title>一対多</title>
        
        <para>
            <emphasis>結合テーブルを使った単方向一対多関連</emphasis> 
            はより好ましいです。
            <literal>unique="true"</literal> の指定により、多重度が多対多から一対多
            に変わったことに注意して下さい。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <set name="addresses" table="PersonAddress">
        <key column="personId"/>
        <many-to-many column="addressId"
            unique="true"
            class="Address"/>
    </set>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table PersonAddress ( personId not null, addressId bigint not null primary key )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>

        <sect2 id="assoc-unidirectional-join-m21">
        <title>多対一</title>
        
        <para>
            <emphasis>結合テーブルの単方向多対一関連</emphasis> は
            関連が任意であるときに非常に一般的なものです。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <join table="PersonAddress" 
        optional="true">
        <key column="personId" unique="true"/>
        <many-to-one name="address"
            column="addressId" 
            not-null="true"/>
    </join>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table PersonAddress ( personId bigint not null primary key, addressId bigint not null )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>

        <sect2 id="assoc-unidirectional-join-121">
        <title>一対一</title>
        
        <para>
            <emphasis>結合テーブルの単方向一対一関連</emphasis> は、本当に特殊ですが
            不可能ではありません。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <join table="PersonAddress" 
        optional="true">
        <key column="personId" 
            unique="true"/>
        <many-to-one name="address"
            column="addressId" 
            not-null="true"
            unique="true"/>
    </join>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table PersonAddress ( personId bigint not null primary key, addressId bigint not null unique )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>

        <sect2 id="assoc-unidirectional-join-m2m">
        <title>多対多</title>
        
        <para>
            最後に、<emphasis>単方向多対多関連</emphasis> を示します。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <set name="addresses" table="PersonAddress">
        <key column="personId"/>
        <many-to-many column="addressId"
            class="Address"/>
    </set>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table PersonAddress ( personId bigint not null, addressId bigint not null, primary key (personId, addressId) )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>

    </sect1>

    <sect1 id="assoc-bidirectional" revision="1">
        <title>双方向関連</title>
        
        <sect2 id="assoc-bidirectional-m21" revision="2">
        <title>一対多/多対一</title>
        
        <para>
            <emphasis>双方向多対一関連</emphasis> は最も一般的な関連です。
            （標準的な親子関係です）
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <many-to-one name="address" 
        column="addressId"
        not-null="true"/>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
    <set name="people" inverse="true">
        <key column="addressId"/>
        <one-to-many class="Person"/>
    </set>
</class>]]></programlisting>

        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key, addressId bigint not null )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        <para>
            <literal>List</literal> （または他のインデックス付きのコレクション）を使うなら、
            外部キーの <literal>key</literal> カラムを <literal>not null</literal> に設定し、
            コレクション側が各要素のインデックスをメンテナンスするように、
            関連を扱う必要があります
            （<literal>update="false"</literal> かつ <literal>insert="false"</literal> 
            と設定して、反対側を仮想的にinverseにします）：
        </para>

        <programlisting><![CDATA[<class name="Person">
   <id name="id"/>
   ...
   <many-to-one name="address"
      column="addressId"
      not-null="true"
      insert="false"
      update="false"/>
</class>

<class name="Address">
   <id name="id"/>
   ...
   <list name="people">
      <key column="addressId" not-null="true"/>
      <list-index column="peopleIdx"/>
      <one-to-many class="Person"/>
   </list>
</class>]]></programlisting>

            <para>
                もし外部キーカラムが <literal>NOT NULL</literal> であるならば、
                コレクションマッピングの <literal>&lt;key&gt;</literal> 要素を 
                <literal>not-null="true"</literal> にすることは重要です。
                入れ子になった <literal>&lt;column&gt;</literal> 要素だけではなく、
                <literal>&lt;key&gt;</literal> 要素も <literal>not-null="true"</literal> 
                と定義しないようにしてください。
            </para>

        </sect2>
        
        <sect2 id="assoc-bidirectional-121">
        <title>一対一</title>
        
        <para>
            <emphasis>外部キーの双方向一対一関連</emphasis> は非常に一般的です。
        </para>
        
       <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <many-to-one name="address" 
        column="addressId" 
        unique="true"
        not-null="true"/>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
   <one-to-one name="person" 
        property-ref="address"/>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key, addressId bigint not null unique )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        <para>
            <emphasis>主キーの双方向一対一関連</emphasis> は特殊なIDジェネレータを使います。
        </para>
        
       <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <one-to-one name="address"/>
</class>

<class name="Address">
    <id name="id" column="personId">
        <generator class="foreign">
            <param name="property">person</param>
        </generator>
    </id>
    <one-to-one name="person" 
        constrained="true"/>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table Address ( personId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>
        
    </sect1>

    <sect1 id="assoc-bidirectional-join" revision="1">
        <title>結合テーブルを使った双方向関連</title>
        
        <sect2 id="assoc-bidirectional-join-12m">
        <title>一対多/多対一</title>
        
        <para>
            <emphasis>結合テーブルの双方向一対多関連</emphasis> です。
            <literal>inverse="true"</literal> が関連端、コレクション、結合のいずれかに
            設定できることに注意してください。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <set name="addresses" 
        table="PersonAddress">
        <key column="personId"/>
        <many-to-many column="addressId"
            unique="true"
            class="Address"/>
    </set>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
    <join table="PersonAddress" 
        inverse="true" 
        optional="true">
        <key column="addressId"/>
        <many-to-one name="person"
            column="personId"
            not-null="true"/>
    </join>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table PersonAddress ( personId bigint not null, addressId bigint not null primary key )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>

         <sect2 id="assoc-bidirectional-join-121">
        <title>一対一</title>
        
        <para>
            <emphasis>結合テーブルの双方向一対一関連</emphasis> 
            は非常に特殊ですが、可能です。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <join table="PersonAddress" 
        optional="true">
        <key column="personId" 
            unique="true"/>
        <many-to-one name="address"
            column="addressId" 
            not-null="true"
            unique="true"/>
    </join>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
    <join table="PersonAddress" 
        optional="true"
        inverse="true">
        <key column="addressId" 
            unique="true"/>
        <many-to-one name="address"
            column="personId" 
            not-null="true"
            unique="true"/>
    </join>
</class>]]></programlisting>
        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table PersonAddress ( personId bigint not null primary key, addressId bigint not null unique )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>

        </sect2>
        
        <sect2 id="assoc-bidirectional-join-m2m" revision="1">
        <title>多対多</title>
        
        <para>
            最後に、<emphasis>双方向多対多関連</emphasis> を示します。
        </para>
        
        <programlisting><![CDATA[<class name="Person">
    <id name="id" column="personId">
        <generator class="native"/>
    </id>
    <set name="addresses" table="PersonAddress">
        <key column="personId"/>
        <many-to-many column="addressId"
            class="Address"/>
    </set>
</class>

<class name="Address">
    <id name="id" column="addressId">
        <generator class="native"/>
    </id>
    <set name="people" inverse="true" table="PersonAddress">
        <key column="addressId"/>
        <many-to-many column="personId"
            class="Person"/>
    </set>
</class>]]></programlisting>

        <programlisting><![CDATA[
create table Person ( personId bigint not null primary key )
create table PersonAddress ( personId bigint not null, addressId bigint not null, primary key (personId, addressId) )
create table Address ( addressId bigint not null primary key )
        ]]></programlisting>
        
        </sect2>
        
    </sect1>

    <sect1 id="assoc-complex">
        <title>より複雑な関連マッピング</title>
        
        <para>
            より複雑な関連結合は <emphasis>極めて</emphasis> 稀です。
            マッピングドキュメントにSQL文を埋め込むことで、
            さらに複雑な状況を扱うことができます。
            例えば、<literal>accountNumber</literal>, <literal>effectiveEndDate</literal>, 
            <literal>effectiveStartDate</literal> カラムを持つaccount（口座）情報の履歴を扱うテーブルは、
            以下のようにマッピングします。
        </para>
        
        <programlisting><![CDATA[<properties name="currentAccountKey">
    <property name="accountNumber" type="string" not-null="true"/>
    <property name="currentAccount" type="boolean">
        <formula>case when effectiveEndDate is null then 1 else 0 end</formula>
    </property>
</properties>
<property name="effectiveEndDate" type="date"/>
<property name="effectiveStateDate" type="date" not-null="true"/>]]></programlisting>

        <para>
            そして、関連を <emphasis>現時点の</emphasis> インスタンス
            （<literal>effectiveEndDate</literal> がnullであるもの）にマッピングします。
            以下のようになります：
        </para>
        
        <programlisting><![CDATA[<many-to-one name="currentAccountInfo" 
        property-ref="currentAccountKey"
        class="AccountInfo">
    <column name="accountNumber"/>
    <formula>'1'</formula>
</many-to-one>]]></programlisting>

        <para>
            さらに複雑な例では、<literal>Employee（従業員）</literal> と <literal>Organization（組織）</literal> 
            間の関連が <literal>Employment（雇用）</literal> テーブルで保持される場合を想像してください。
            このテーブルには雇用データの履歴がすべて含まれます。
            すると従業員の <emphasis>最も最近の</emphasis> 雇用者を表す関連
            （最も最近の <literal>startDate</literal> を持つもの）は、このようにマッピングできます：
        </para>
        
        <programlisting><![CDATA[<join>
    <key column="employeeId"/>
    <subselect>
        select employeeId, orgId 
        from Employments 
        group by orgId 
        having startDate = max(startDate)
    </subselect>
    <many-to-one name="mostRecentEmployer" 
            class="Organization" 
            column="orgId"/>
</join>]]></programlisting>

        <para>
            この機能は非常に強力です。
            しかしこのような場合、普通はHQLやcriteriaクエリを使う方がより実践的です。
        </para>

    </sect1>


</chapter>

