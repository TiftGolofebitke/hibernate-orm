import org.apache.tools.ant.filters.*

apply plugin: 'java'

// not needed if we rename the directories to match the sourceSet name
sourceSets {
    test {
        // resources inherently exclude sources
        resources {
            setSrcDirs( ['src/test/java','src/test/resources'] )
        }
    }
}

dependencies {
    shrinkwrapVersion = '1.0.0-alpha-6'

    compile( project(':hibernate-core') )
    compile( libraries.dom4j )
    compile( libraries.commons_annotations )
    compile( libraries.jpa )
    compile( libraries.jta )
    compile( libraries.javassist )
    testCompile( project(':hibernate-core').sourceSets.test.classes )
    testCompile( libraries.junit )
    testCompile( libraries.jpa_modelgen )
    testCompile( libraries.shrinkwrap_api )
    testCompile( libraries.shrinkwrap )
    testCompile( libraries.validation )
    testCompile( libraries.slf4j_api )
    testRuntime( libraries.validator )
}

procTargetDirName = buildDirName + "/generated-src/jpamodelgen"
procTargetDir = dir( procTargetDirName )

task generateMetaModel(type: Compile) {
    classpath = compileTestJava.classpath
    source = compileTestJava.source
    destinationDir = compileTestJava.destinationDir
    configure( options ) {
        compilerArgs = ["-proc:only", "-s", "$procTargetDir.dir.absolutePath"]
    }
}
generateMetaModel.dependsOn procTargetDir

compileTestJava {
    configure( options ) {
        compilerArgs = [ "-s", "$procTargetDir.dir.absolutePath" ]
    }
    source += files(procTargetDir.dir)
}
compileTestJava.dependsOn generateMetaModel

task copyBundleResources (type: Copy) {
    bundlesTargetDirName = "$buildDirName/bundles"
    bundlesTargetDir = dir( bundlesTargetDirName )

    from file('src/test/bundles') 
    into bundlesTargetDir.dir
    filter(ReplaceTokens, tokens: [
            buildDirName: buildDir.absolutePath,
            'db.dialect': 'org.hibernate.dialect.H2Dialect',
            'jdbc.driver': 'org.h2.Driver',
            'jdbc.user': 'sa',
            'jdbc.pass': '',
            'jdbc.url': 'jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE',
    ])
}
//copyBundleResources.dependsOn hibernateProperties
processTestResources.dependsOn copyBundleResources

ideaModule {
    testSourceDirs.add( file( procTargetDirName ) )
}
ideaModule.dependsOn procTargetDir



