Starting with development of version 4.0, Hibernate uses Gradle (http://gradle.org) as its build tool.  This README describes some of the basics developers and contributors new to Gradle need to know to get productive quickly.  Here is a list of resources to obtain more detailed information about Gradle:

* The Gradle User Guide : http://gradle.org/latest/docs/userguide/userguide_single.html
* Gradle DSL Guide : http://gradle.org/latest/docs/dsl/index.html
* Additional Hibernate/Gradle information : http://community.jboss.org/wiki/GradleFAQ

Executing Tasks Across All Modules
----------------------------------
To execute a task across all modules, simply perform that task from the root directory.  Gradle will visit each
subproject and execute that task if the subproject defines it.

Executing Tasks In Specific Module
----------------------------------
To execute a task in a specific module you can either:
1. `cd` into that module directory and execute the task
2. name the "task path".  For example, in order to run the tests for the hibernate-core module from the root directory
    you could say `gradle hibernate-core:test`

Common Java-module tasks
------------------------
* build - Assembles (jars) and tests this project
* buildDependents - Assembles and tests this project and all projects that depend on it.  So think of running this in hibernnate-entitymanager, Gradle would assemble and test hibernate-entitymanager as well as hibernate-envers (because envers depends on entitymanager)
* classes - Compiles the main classes
* testClasses - Compiles the test classes
* jar - Generates a jar archive with all the compiled classes
* test - Runs the tests
* uploadArchives - Think Maven deploy
* install - Installs the project jar to your local maven cache (aka ~/.m2/repository)
* eclipse - Generates an Eclipse project
* idea - Generates an IntelliJ/IDEA project.
* clean - Cleans the build directory