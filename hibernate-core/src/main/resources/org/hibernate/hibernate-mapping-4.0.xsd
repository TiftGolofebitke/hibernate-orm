<?xml version="1.0" encoding="UTF-8"?>

<!-- Hibernate Mapping DTD.



An instance of this XML document may contain mappings for an arbitrary 
number of classes. The class mappings may contain associations to classes
mapped in the same document or in another document. No class may be 
mapped more than once. Each document may also contain definitions of an
arbitrary number of queries, and import declarations of arbitrary classes. 

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://www.hibernate.org/xsd/hibernate-mapping"
           targetNamespace="http://www.hibernate.org/xsd/hibernate-mapping"
           version="4.0">

  <!--
  	The document root.
   -->
  <xs:element name="hibernate-mapping">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
        <!--
            <identifier-generator.../> allows customized short-naming of IdentifierGenerator implementations.
        -->
        <xs:element name="identifier-generator" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="name" use="required"/>
            <xs:attribute ref="class" use="required"/>
          </xs:complexType>
        </xs:element>
        <!--
        	<typedef.../> allows defining a customized type mapping for a Hibernate type. May
        	contain parameters for parameterizable types.
        -->
        <xs:element name="typedef" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="param" type="param" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute ref="class" use="required"/>
            <xs:attribute name="name" use="required"/>
          </xs:complexType>
        </xs:element>
        <!--
        	FILTER-DEF element; top-level filter definition.
        -->
        <xs:element name="filter-def" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType mixed="true">
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
              <!--
              	FILTER-PARAM element; qualifies parameters found within a FILTER-DEF
              	condition.
              -->
              <xs:element name="filter-param">
                <xs:complexType>
                  <xs:attribute name="name" use="required"/> <!-- The parameter name -->
                  <xs:attribute ref="type" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="name" use="required"/> <!-- The filter name -->
            <xs:attribute ref="condition"/>
          </xs:complexType>
        </xs:element>
        <!--
        	IMPORT element definition; an explicit query language "import"
        -->
        <xs:element name="import" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute ref="class" use="required"/>
            <xs:attribute name="rename"/> <!-- default: unqualified class name -->
          </xs:complexType>
        </xs:element>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <!--
          	Root entity mapping.  Poorly named as entities do not have to be represented by 
          	classes at all.  Mapped entities may be represented via different methodologies 
          	(POJO, Map, Dom4j).
          -->
          <xs:element name="class">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="subselect" type="xs:string" minOccurs="0"/>
                <xs:element name="cache" type="cache" minOccurs="0"/>
                <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="comment" type="xs:string" minOccurs="0"/>
                <xs:element name="tuplizer" type="tuplizer" minOccurs="0" maxOccurs="unbounded"/>
                <xs:choice>
                  <!-- Declares the id type, column and generation algorithm for an entity class.
                  If a name attribut is given, the id is exposed to the application through the 
                  named property of the class. If not, the id is only exposed to the application 
                  via Session.getIdentifier() -->
                  <xs:element name="id">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="type" type="type" minOccurs="0"/>
                        <xs:element name="generator" type="generator" minOccurs="0"/>
                      </xs:sequence>
                      <xs:attribute name="name"/>
                      <xs:attribute ref="node"/>
                      <xs:attribute ref="access"/>
                      <xs:attribute ref="column"/>
                      <xs:attribute ref="type"/>
                      <xs:attribute ref="length"/>
                      <xs:attribute name="unsaved-value"/> <!-- any|none|null|undefined|0|-1|... -->
                    </xs:complexType>
                  </xs:element>
                  <!-- A composite key may be modelled by a java class with a property for each 
                  key column. The class must implement java.io.Serializable and reimplement equals() 
                  and hashCode(). -->
                  <xs:element name="composite-id">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:choice maxOccurs="unbounded">
                          <xs:element name="key-property" type="key-property"/>
                          <xs:element name="key-many-to-one" type="key-many-to-one"/>
                        </xs:choice>
                        <xs:element name="generator" type="generator" minOccurs="0"/>
                      </xs:sequence>
                      <xs:attribute ref="class"/>
                      <xs:attribute name="mapped" default="false">
                      </xs:attribute>
                      <xs:attribute name="name"/>
                      <xs:attribute ref="node"/>
                      <xs:attribute ref="access"/>
                      <xs:attribute ref="unsaved-value" default="undefined"/>
                    </xs:complexType>
                  </xs:element>
                </xs:choice>
                <!-- Polymorphic data requires a column holding a class discriminator value. This
                value is not directly exposed to the application. -->
                <xs:element name="discriminator" minOccurs="0">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:choice minOccurs="0">
                        <xs:element name="column" type="column"/>
                        <xs:element name="formula" type="xs:string"/>
                      </xs:choice>
                    </xs:sequence>
                    <xs:attribute ref="column"/>
                    <xs:attribute ref="formula"/>
                    <xs:attribute ref="type" default="string"/>
                    <xs:attribute ref="not-null" default="true"/>
                    <xs:attribute ref="length"/>
                    <xs:attribute name="force" default="false">
                    </xs:attribute>
                    <xs:attribute ref="insert" default="true"/>
                  </xs:complexType>
                </xs:element>
                <!-- A natural-id element allows declaration of the unique business key -->
                <xs:element name="natural-id" minOccurs="0">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="property" type="property"/>
                        <xs:element name="many-to-one" type="many-to-one"/>
                        <xs:element name="component" type="component"/>
                        <xs:element name="dynamic-component" type="dynamic-component"/>
                        <xs:element name="any" type="any"/>
                      </xs:choice>
                    </xs:sequence>
                    <xs:attribute ref="mutable" default="false"/>
                  </xs:complexType>
                </xs:element>
                <xs:choice minOccurs="0">
                  <!-- Versioned data requires a column holding a version number. This is exposed to the
                  application through a property of the Java class. -->
                  <xs:element name="version">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
                      </xs:sequence>
                      <xs:attribute name="name" use="required"/>
                      <xs:attribute ref="node"/>
                      <xs:attribute ref="access"/>
                      <xs:attribute ref="column"/>
                      <xs:attribute ref="type" default="integer"/>
                      <xs:attribute ref="unsaved-value" default="undefined"/>
                      <xs:attribute ref="generated" default="never"/>
                      <xs:attribute ref="insert"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="timestamp">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
                      </xs:sequence>
                      <xs:attribute name="name" use="required"/>
                      <xs:attribute ref="node"/>
                      <xs:attribute ref="column"/>
                      <xs:attribute ref="access"/>
                      <xs:attribute name="unsaved-value" default="null">
                      </xs:attribute>
                      <xs:attribute name="source" default="vm">
                      </xs:attribute>
                      <xs:attribute ref="generated" default="never"/>
                    </xs:complexType>
                  </xs:element>
                </xs:choice>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="property" type="property"/>
                  <xs:element name="many-to-one" type="many-to-one"/>
                  <xs:element name="one-to-one" type="one-to-one"/>
                  <xs:element name="component" type="component"/>
                  <xs:element name="dynamic-component" type="dynamic-component"/>
                  <xs:element name="properties" type="properties"/>
                  <xs:element name="any" type="any"/>
                  <xs:element name="map" type="map"/>
                  <xs:element name="set" type="set"/>
                  <xs:element name="list" type="list"/>
                  <xs:element name="bag" type="bag"/>
                  <xs:element name="idbag" type="idbag"/>
                  <xs:element name="array" type="array"/>
                  <xs:element name="primitive-array" type="primitive-array"/>
                </xs:choice>
                <xs:choice>
                  <xs:sequence>
                    <xs:element name="join" type="join" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="subclass" type="subclass" minOccurs="0" maxOccurs="unbounded"/>
                  </xs:sequence>
                  <xs:element name="joined-subclass" type="joined-subclass" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="union-subclass" type="union-subclass" minOccurs="0" maxOccurs="unbounded"/>
                </xs:choice>
                <xs:element name="loader" type="loader" minOccurs="0"/>
                <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
                <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
                <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
                <xs:element name="filter" type="filter" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="fetch-profile" type="fetch-profile" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="resultset" type="resultset" minOccurs="0" maxOccurs="unbounded"/>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="query" type="query"/>
                  <xs:element name="sql-query" type="sql-query"/>
                </xs:choice>
              </xs:sequence>
              <xs:attribute ref="entity-name"/>
              <xs:attribute name="name"/> <!-- this is the class name -->
              <xs:attribute ref="proxy"/>
              <xs:attributeGroup ref="lazyGroupEnum2"/>
              <xs:attribute ref="table"/>
              <xs:attribute ref="schema"/>
              <xs:attribute ref="catalog"/>
              <xs:attribute ref="subselect"/>
              <xs:attribute ref="discriminator-value"/>
              <xs:attribute ref="mutable" default="true"/>
              <xs:attribute ref="abstract"/>
              <xs:attribute name="polymorphism" default="implicit">
              </xs:attribute>
              <xs:attribute ref="where"/>
              <xs:attribute ref="persister"/>
              <xs:attribute ref="dynamic-update" default="false"/>
              <xs:attribute ref="dynamic-insert" default="false"/>
              <xs:attribute ref="batch-size"/>
              <xs:attribute ref="select-before-update" default="false"/>
              <xs:attribute name="optimistic-lock" default="version">
              </xs:attribute>
              <xs:attributeGroup ref="checkGroup"/>
              <xs:attribute name="rowid"/>
              <xs:attribute ref="node"/>
            </xs:complexType>
          </xs:element>
          <xs:element name="subclass" type="subclass"/>
          <xs:element name="joined-subclass" type="joined-subclass"/>
          <xs:element name="union-subclass" type="union-subclass"/>
        </xs:choice>
        <xs:element name="resultset" type="resultset" minOccurs="0" maxOccurs="unbounded"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="query" type="query"/>
          <xs:element name="sql-query" type="sql-query"/>
        </xs:choice>
        <xs:element name="fetch-profile" type="fetch-profile" minOccurs="0" maxOccurs="unbounded"/>
        <!--
            Element for defining "auxiliary" database objects.  Must be one of two forms:
            #1 :
                <database-object>
                    <definition class="CustomClassExtendingAuxiliaryObject"/>
                </database-object>
            #2 :
                <database-object>
                    <create>CREATE OR REPLACE ....</create>
                    <drop>DROP ....</drop>
                </database-object>
        -->
        <xs:element name="database-object" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:choice>
                <xs:element name="definition">
                  <xs:complexType>
                    <xs:attribute ref="class" use="required"/>
                  </xs:complexType>
                </xs:element>
                <xs:sequence>
                  <xs:element name="create"/>
                  <xs:element name="drop"/>
                </xs:sequence>
              </xs:choice>
              <!--
                  dialect-scope element allows scoping auxiliary-objects to a particular
                  Hibernate dialect implementation.
              -->
              <xs:element name="dialect-scope" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType mixed="true">
                  <xs:attribute name="name" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute ref="schema"/>
      <xs:attribute ref="catalog"/>
      <xs:attribute name="default-cascade" default="none"/>
      <xs:attribute name="default-access" default="property"/>
      <xs:attribute name="default-lazy" default="true">
      </xs:attribute>
      <xs:attribute name="auto-import" default="true">
      </xs:attribute>
      <xs:attribute name="package"/> <!-- default: none -->
    </xs:complexType>
  </xs:element>

  <xs:complexType name="meta" mixed="true">
    <xs:attribute name="attribute" use="required"/>
    <xs:attribute name="inherit" default="true">
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="tuplizer">
    <xs:attribute name="entity-mode">
    </xs:attribute>
    <xs:attribute ref="class" use="required"/>
  </xs:complexType>

  <xs:complexType name="filter" mixed="true">
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="condition"/>
  </xs:complexType>

  <xs:complexType name="fetch-profile">
    <xs:sequence>
      <!--
          The <fetch> element defines a single path to which the fetch
          refers, as well as the style of fetch to apply.  The 'root' of the
          path is different depending upon the context in which the
          containing <fetch-profile/> occurs; within a <class/> element,
          the entity-name of the containing class mapping is assumed...
      -->
      <xs:element name="fetch" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="entity"/> <!-- Implied as long as the containing fetch profile is contained in a class mapping -->
          <xs:attribute name="association" use="required"/>
          <xs:attribute name="style" default="join">
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
  </xs:complexType>

  <xs:complexType name="join">
    <xs:sequence>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="key"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="component" type="component"/>
        <xs:element name="dynamic-component" type="dynamic-component"/>
        <xs:element name="any" type="any"/>
      </xs:choice>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute ref="table" use="required"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attributeGroup ref="fetchGroupEnum2"/>
    <xs:attribute ref="inverse" default="false"/>
    <xs:attribute name="optional" default="false">
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="subclass">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="tuplizer" type="tuplizer" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="one-to-one" type="one-to-one"/>
        <xs:element name="component" type="component"/>
        <xs:element name="dynamic-component" type="dynamic-component"/>
        <xs:element name="any" type="any"/>
        <xs:element name="map" type="map"/>
        <xs:element name="set" type="set"/>
        <xs:element name="list" type="list"/>
        <xs:element name="bag" type="bag"/>
        <xs:element name="idbag" type="idbag"/>
        <xs:element name="array" type="array"/>
        <xs:element name="primitive-array" type="primitive-array"/>
      </xs:choice>
      <xs:element name="join" type="join" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subclass" type="subclass" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="fetch-profile" type="fetch-profile" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="resultset" type="resultset" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="query" type="query"/>
        <xs:element name="sql-query" type="sql-query"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="entity-name"/>
    <xs:attribute name="name"/>
    <xs:attribute ref="proxy"/>
    <xs:attribute ref="discriminator-value"/>
    <xs:attribute ref="dynamic-update" default="false"/>
    <xs:attribute ref="dynamic-insert" default="false"/>
    <xs:attribute ref="select-before-update" default="false"/>
    <xs:attribute ref="extends"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
    <xs:attribute ref="abstract"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="joined-subclass">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="tuplizer" type="tuplizer" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="key" type="key"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="one-to-one" type="one-to-one"/>
        <xs:element name="component" type="component"/>
        <xs:element name="dynamic-component" type="dynamic-component"/>
        <xs:element name="properties" type="properties"/>
        <xs:element name="any" type="any"/>
        <xs:element name="map" type="map"/>
        <xs:element name="set" type="set"/>
        <xs:element name="list" type="list"/>
        <xs:element name="bag" type="bag"/>
        <xs:element name="idbag" type="idbag"/>
        <xs:element name="array" type="array"/>
        <xs:element name="primitive-array" type="primitive-array"/>
      </xs:choice>
      <xs:element name="joined-subclass" type="joined-subclass" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="fetch-profile" type="fetch-profile" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="resultset" type="resultset" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="query" type="query"/>
        <xs:element name="sql-query" type="sql-query"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="entity-name"/>
    <xs:attribute name="name"/>
    <xs:attribute ref="proxy"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attribute ref="dynamic-update" default="false"/>
    <xs:attribute ref="dynamic-insert" default="false"/>
    <xs:attribute ref="select-before-update" default="false"/>
    <xs:attribute ref="extends"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
    <xs:attribute ref="abstract"/>
    <xs:attribute ref="persister"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="union-subclass">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="tuplizer" type="tuplizer" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="one-to-one" type="one-to-one"/>
        <xs:element name="component" type="component"/>
        <xs:element name="dynamic-component" type="dynamic-component"/>
        <xs:element name="properties" type="properties"/>
        <xs:element name="any" type="any"/>
        <xs:element name="map" type="map"/>
        <xs:element name="set" type="set"/>
        <xs:element name="list" type="list"/>
        <xs:element name="bag" type="bag"/>
        <xs:element name="idbag" type="idbag"/>
        <xs:element name="array" type="array"/>
        <xs:element name="primitive-array" type="primitive-array"/>
      </xs:choice>
      <xs:element name="union-subclass" type="union-subclass" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="fetch-profile" type="fetch-profile" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="resultset" type="resultset" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="query" type="query"/>
        <xs:element name="sql-query" type="sql-query"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="entity-name"/>
    <xs:attribute name="name"/>
    <xs:attribute ref="proxy"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attribute ref="dynamic-update" default="false"/>
    <xs:attribute ref="dynamic-insert" default="false"/>
    <xs:attribute ref="select-before-update" default="false"/>
    <xs:attribute ref="extends"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
    <xs:attribute ref="abstract"/>
    <xs:attribute ref="persister"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="property">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="column" type="column"/>
        <xs:element name="formula" type="xs:string"/>
      </xs:choice>
      <xs:element name="type" type="type" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="type"/>
    <xs:attribute ref="column"/>
    <xs:attribute ref="length"/>
    <xs:attribute ref="precision"/>
    <xs:attribute ref="scale"/>
    <xs:attribute ref="not-null"/>
    <xs:attribute ref="unique" default="false"/>
    <xs:attribute ref="unique-key"/>
    <xs:attribute ref="index"/>
    <xs:attribute ref="update"/>
    <xs:attribute ref="insert"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="formula"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
    <xs:attribute name="generated" default="never">
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="type">
    <xs:sequence>
      <xs:element name="param" type="param" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
  </xs:complexType>

  <xs:complexType name="many-to-one">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="column" type="column"/>
        <xs:element name="formula" type="xs:string"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="class"/>
    <xs:attribute ref="entity-name"/>
    <xs:attribute ref="column"/>
    <xs:attribute ref="not-null"/>
    <xs:attribute ref="unique" default="false"/>
    <xs:attribute ref="unique-key"/>
    <xs:attribute ref="index"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum2"/>
    <xs:attribute ref="update" default="true"/>
    <xs:attribute ref="insert" default="true"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="foreign-key"/>
    <xs:attribute ref="property-ref"/>
    <xs:attribute ref="formula"/>
    <xs:attributeGroup ref="lazyGroupEnum3"/>
    <xs:attribute ref="not-found" default="exception"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="one-to-one">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="formula" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="formula"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="class"/>
    <xs:attribute ref="entity-name"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum2"/>
    <xs:attribute name="constrained" default="false">
    </xs:attribute>
    <xs:attribute ref="foreign-key"/>
    <xs:attribute ref="property-ref"/>
    <xs:attributeGroup ref="lazyGroupEnum3"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="key-property">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="type" type="type" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="type"/>
    <xs:attribute ref="column"/>
    <xs:attribute ref="length"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="key-many-to-one">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="class"/>
    <xs:attribute ref="entity-name"/>
    <xs:attribute ref="column"/>
    <xs:attribute ref="foreign-key"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
  </xs:complexType>

  <xs:complexType name="any">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="meta-value" type="meta-value" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="column" type="column"/>
    </xs:sequence>
    <xs:attribute ref="id-type" use="required"/>
    <xs:attribute ref="meta-type"/>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="insert" default="true"/>
    <xs:attribute ref="update" default="true"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="index"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="meta-value">
    <xs:attribute name="value" use="required"/>
    <xs:attribute ref="class" use="required"/>
  </xs:complexType>

  <xs:complexType name="component">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="tuplizer" type="tuplizer" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="parent" type="parent" minOccurs="0"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="one-to-one" type="one-to-one"/>
        <xs:element name="component" type="component"/>
        <xs:element name="dynamic-component" type="dynamic-component"/>
        <xs:element name="any" type="any"/>
        <xs:element name="map" type="map"/>
        <xs:element name="set" type="set"/>
        <xs:element name="list" type="list"/>
        <xs:element name="bag" type="bag"/>
        <xs:element name="array" type="array"/>
        <xs:element name="primitive-array" type="primitive-array"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="class"/>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="unique" default="false"/>
    <xs:attribute ref="update" default="true"/>
    <xs:attribute ref="insert" default="true"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="dynamic-component">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="one-to-one" type="one-to-one"/>
        <xs:element name="component" type="component"/>
        <xs:element name="dynamic-component" type="dynamic-component"/>
        <xs:element name="any" type="any"/>
        <xs:element name="map" type="map"/>
        <xs:element name="set" type="set"/>
        <xs:element name="list" type="list"/>
        <xs:element name="bag" type="bag"/>
        <xs:element name="array" type="array"/>
        <xs:element name="primitive-array" type="primitive-array"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="unique" default="false"/>
    <xs:attribute ref="update" default="true"/>
    <xs:attribute ref="insert" default="true"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="properties">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="component" type="component"/>
        <xs:element name="dynamic-component" type="dynamic-component"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="unique" default="false"/>
    <xs:attribute ref="insert" default="true"/>
    <xs:attribute ref="update" default="true"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="parent">
    <xs:attribute name="name" use="required"/>
  </xs:complexType>

  <xs:complexType name="map">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="cache" type="cache" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="key"/>
      <xs:choice>
        <xs:element name="map-key">
          <xs:complexType>
            <xs:sequence>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="column" type="column"/>
                <xs:element name="formula" type="xs:string"/>
              </xs:choice>
              <xs:element name="type" type="type" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute ref="column"/>
            <xs:attribute ref="formula"/>
            <xs:attribute ref="type"/>
            <xs:attribute ref="length"/>
            <xs:attribute ref="node"/>
          </xs:complexType>
        </xs:element>
        <!-- Composite index of a map ie. a map keyed on components. -->
        <xs:element name="composite-map-key">
          <xs:complexType>
            <xs:sequence>
              <xs:choice maxOccurs="unbounded">
                <xs:element name="key-property" type="key-property"/>
                <xs:element name="key-many-to-one" type="key-many-to-one"/>
              </xs:choice>
            </xs:sequence>
            <xs:attribute ref="class" use="required"/>
          </xs:complexType>
        </xs:element>
        <!-- Many to many association mapped to the key of a map. ie. a map keyed
        on entities. -->
        <xs:element name="map-key-many-to-many">
          <xs:complexType>
            <xs:sequence>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="column" type="column"/>
                <xs:element name="formula" type="xs:string"/>
              </xs:choice>
            </xs:sequence>
            <xs:attribute ref="class"/>
            <xs:attribute ref="entity-name"/>
            <xs:attribute ref="column"/>
            <xs:attribute ref="formula"/>
            <xs:attribute ref="foreign-key"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="index" type="index"/>
        <xs:element name="composite-index">
          <xs:complexType>
            <xs:sequence>
              <xs:choice maxOccurs="unbounded">
                <xs:element name="key-property" type="key-property"/>
                <xs:element name="key-many-to-one" type="key-many-to-one"/>
              </xs:choice>
            </xs:sequence>
            <xs:attribute ref="class" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="index-many-to-many">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute ref="class" use="required"/>
            <xs:attribute ref="entity-name"/>
            <xs:attribute ref="column"/>
            <xs:attribute ref="foreign-key"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="index-many-to-any">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="column" type="column"/>
            </xs:sequence>
            <xs:attribute ref="id-type" use="required"/>
            <xs:attribute ref="meta-type"/>
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:choice>
        <xs:element name="element" type="element"/>
        <xs:element name="one-to-many" type="one-to-many"/>
        <xs:element name="many-to-many" type="many-to-many"/>
        <xs:element name="composite-element" type="composite-element"/>
        <xs:element name="many-to-any" type="many-to-any"/>
      </xs:choice>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="sql-delete-all" type="sql-delete-all" minOccurs="0"/>
      <xs:element name="filter" type="filter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="subselect"/>
    <xs:attribute ref="catalog"/>
    <xs:attributeGroup ref="lazyGroupEnum3"/>
    <xs:attribute ref="mutable" default="true"/>
    <xs:attribute ref="inverse" default="false"/>
    <xs:attribute ref="sort" default="unsorted"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="order-by"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum3"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="collection-type"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="set">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="cache" type="cache" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="key"/>
      <xs:choice>
        <xs:element name="element" type="element"/>
        <xs:element name="one-to-many" type="one-to-many"/>
        <xs:element name="many-to-many" type="many-to-many"/>
        <xs:element name="composite-element" type="composite-element"/>
        <xs:element name="many-to-any" type="many-to-any"/>
      </xs:choice>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="sql-delete-all" type="sql-delete-all" minOccurs="0"/>
      <xs:element name="filter" type="filter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attributeGroup ref="lazyGroupEnum3"/>
    <xs:attribute ref="sort" default="unsorted"/>
    <xs:attribute ref="inverse" default="false"/>
    <xs:attribute ref="mutable" default="true"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="order-by"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum3"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="collection-type"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="bag">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="cache" type="cache" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="key"/>
      <xs:choice>
        <xs:element name="element" type="element"/>
        <xs:element name="one-to-many" type="one-to-many"/>
        <xs:element name="many-to-many" type="many-to-many"/>
        <xs:element name="composite-element" type="composite-element"/>
        <xs:element name="many-to-any" type="many-to-any"/>
      </xs:choice>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="sql-delete-all" type="sql-delete-all" minOccurs="0"/>
      <xs:element name="filter" type="filter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attributeGroup ref="lazyGroupEnum3"/>
    <xs:attribute ref="inverse" default="false"/>
    <xs:attribute ref="mutable" default="true"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="order-by"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum3"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="collection-type"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="idbag">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="cache" type="cache" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="collection-id">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="generator" type="generator"/>
          </xs:sequence>
          <xs:attribute ref="column" use="required"/>
          <xs:attribute ref="type" use="required"/>
          <xs:attribute ref="length"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="key" type="key"/>
      <xs:choice>
        <xs:element name="element" type="element"/>
        <xs:element name="many-to-many" type="many-to-many"/>
        <xs:element name="composite-element" type="composite-element"/>
        <xs:element name="many-to-any" type="many-to-any"/>
      </xs:choice>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="sql-delete-all" type="sql-delete-all" minOccurs="0"/>
      <xs:element name="filter" type="filter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attributeGroup ref="lazyGroupEnum3"/>
    <xs:attribute ref="mutable" default="true"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="order-by"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum3"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="collection-type"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="list">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="cache" type="cache" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="key"/>
      <xs:choice>
        <xs:element name="index" type="index"/>
        <xs:element name="list-index" type="list-index"/>
      </xs:choice>
      <xs:choice>
        <xs:element name="element" type="element"/>
        <xs:element name="one-to-many" type="one-to-many"/>
        <xs:element name="many-to-many" type="many-to-many"/>
        <xs:element name="composite-element" type="composite-element"/>
        <xs:element name="many-to-any" type="many-to-any"/>
      </xs:choice>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="sql-delete-all" type="sql-delete-all" minOccurs="0"/>
      <xs:element name="filter" type="filter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attributeGroup ref="lazyGroupEnum3"/>
    <xs:attribute ref="inverse" default="false"/>
    <xs:attribute ref="mutable" default="true"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum3"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="collection-type"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="array">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="cache" type="cache" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="key"/>
      <xs:choice>
        <xs:element name="index" type="index"/>
        <xs:element name="list-index" type="list-index"/>
      </xs:choice>
      <xs:choice>
        <xs:element name="element" type="element"/>
        <xs:element name="one-to-many" type="one-to-many"/>
        <xs:element name="many-to-many" type="many-to-many"/>
        <xs:element name="composite-element" type="composite-element"/>
        <xs:element name="many-to-any" type="many-to-any"/>
      </xs:choice>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="sql-delete-all" type="sql-delete-all" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attribute ref="inverse" default="false"/>
    <xs:attribute ref="mutable" default="true"/>
    <xs:attribute name="element-class"/>
    <xs:attribute ref="cascade"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum3"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="collection-type"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="primitive-array">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subselect" type="xs:string" minOccurs="0"/>
      <xs:element name="cache" type="cache" minOccurs="0"/>
      <xs:element name="synchronize" type="synchronize" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="key"/>
      <xs:choice>
        <xs:element name="index" type="index"/>
        <xs:element name="list-index" type="list-index"/>
      </xs:choice>
      <xs:element name="element" type="element"/>
      <xs:element name="loader" type="loader" minOccurs="0"/>
      <xs:element name="sql-insert" type="sql-insert" minOccurs="0"/>
      <xs:element name="sql-update" type="sql-update" minOccurs="0"/>
      <xs:element name="sql-delete" type="sql-delete" minOccurs="0"/>
      <xs:element name="sql-delete-all" type="sql-delete-all" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="table"/>
    <xs:attribute ref="schema"/>
    <xs:attribute ref="catalog"/>
    <xs:attribute ref="subselect"/>
    <xs:attribute ref="mutable" default="true"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="batch-size"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum3"/>
    <xs:attribute ref="persister"/>
    <xs:attribute ref="collection-type"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute ref="optimistic-lock" default="true"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
  </xs:complexType>

  <xs:complexType name="element">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="column" type="column"/>
        <xs:element name="formula" type="xs:string"/>
      </xs:choice>
      <xs:element name="type" type="type" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute ref="column"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="formula"/>
    <xs:attribute ref="type"/>
    <xs:attribute ref="length"/>
    <xs:attribute ref="precision"/>
    <xs:attribute ref="scale"/>
    <xs:attribute ref="not-null" default="false"/>
    <xs:attribute ref="unique" default="false"/>
  </xs:complexType>

  <xs:complexType name="one-to-many">
    <xs:attribute ref="class"/>
    <xs:attribute ref="not-found" default="exception"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
    <xs:attribute ref="entity-name"/>
  </xs:complexType>

  <xs:complexType name="many-to-many">
    <xs:sequence>
      <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="column" type="column"/>
        <xs:element name="formula" type="xs:string"/>
      </xs:choice>
      <xs:element name="filter" type="filter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="class"/>
    <xs:attribute ref="node"/>
    <xs:attribute ref="embed-xml" default="true"/>
    <xs:attribute ref="entity-name"/>
    <xs:attribute ref="column"/>
    <xs:attribute ref="formula"/>
    <xs:attribute ref="not-found" default="exception"/>
    <xs:attribute ref="outer-join"/>
    <xs:attributeGroup ref="fetchGroupEnum2"/>
    <xs:attributeGroup ref="lazyGroupEnum2"/>
    <xs:attribute ref="foreign-key"/>
    <xs:attribute ref="unique" default="false"/>
    <xs:attribute ref="where"/>
    <xs:attribute ref="order-by"/>
    <xs:attribute ref="property-ref"/>
  </xs:complexType>

  <xs:complexType name="composite-element">
    <xs:sequence>
      <xs:sequence>
        <xs:element name="meta" type="meta" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:element name="parent" type="parent" minOccurs="0"/>
      <xs:element name="tuplizer" type="tuplizer" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="any" type="any"/>
        <xs:element name="nested-composite-element" type="nested-composite-element"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="class" use="required"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="nested-composite-element">
    <xs:sequence>
      <xs:element name="parent" type="parent" minOccurs="0"/>
      <xs:element name="tuplizer" type="tuplizer" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="property" type="property"/>
        <xs:element name="many-to-one" type="many-to-one"/>
        <xs:element name="any" type="any"/>
        <xs:element name="nested-composite-element" type="nested-composite-element"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="class" use="required"/>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="access"/>
    <xs:attribute ref="node"/>
  </xs:complexType>

  <xs:complexType name="key">
    <xs:sequence>
      <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="column"/>
    <xs:attribute ref="property-ref"/>
    <xs:attribute ref="foreign-key"/>
    <xs:attribute name="on-delete" default="noaction">
    </xs:attribute>
    <xs:attribute ref="not-null"/>
    <xs:attribute ref="update"/>
    <xs:attribute ref="unique"/>
  </xs:complexType>

  <xs:complexType name="list-index">
    <xs:sequence>
      <xs:element name="column" type="column" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute ref="column"/>
    <xs:attribute name="base" default="0"/>
  </xs:complexType>

  <xs:complexType name="index">
    <xs:sequence>
      <xs:element name="column" type="column" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="column"/>
    <xs:attribute ref="type"/>
    <xs:attribute ref="length"/>
  </xs:complexType>

  <xs:complexType name="many-to-any">
    <xs:sequence>
      <xs:element name="meta-value" type="meta-value" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="column" type="column"/>
    </xs:sequence>
    <xs:attribute ref="id-type" use="required"/>
    <xs:attribute ref="meta-type"/>
  </xs:complexType>

  <xs:complexType name="generator">
    <xs:sequence>
      <xs:element name="param" type="param" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="class" use="required"/>
  </xs:complexType>

  <xs:complexType name="param" mixed="true">
    <xs:attribute name="name" use="required"/>
  </xs:complexType>

  <xs:complexType name="column">
    <xs:sequence>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="length"/>
    <xs:attribute ref="precision"/>
    <xs:attribute ref="scale"/>
    <xs:attribute ref="not-null"/>
    <xs:attribute ref="unique"/>
    <xs:attribute ref="unique-key"/>
    <xs:attribute name="sql-type"/> <!-- override default column type for hibernate type -->
    <xs:attribute ref="index"/>
    <xs:attributeGroup ref="checkGroup"/>
    <xs:attribute name="default"/> <!-- default: no default value -->
    <xs:attribute name="read"/> <!-- default: column name -->
    <xs:attribute name="write"/> <!-- default: parameter placeholder ('?') -->
  </xs:complexType>

  <xs:complexType name="cache">
    <xs:attribute name="usage" use="required">
    </xs:attribute>
    <xs:attribute name="region"/> <!-- default: class or collection role name -->
    <xs:attribute name="include" default="all">
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="loader">
    <xs:attribute name="query-ref" use="required"/>
  </xs:complexType>

  <xs:complexType name="query" mixed="true">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="query-param" type="query-param"/>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="flush-mode"/>
    <xs:attribute ref="cacheable" default="false"/>
    <xs:attribute ref="cache-region"/>
    <xs:attribute ref="fetch-size"/>
    <xs:attribute ref="timeout"/>
    <xs:attribute ref="cache-mode"/>
    <xs:attribute ref="read-only"/>
    <xs:attribute ref="comment"/>
  </xs:complexType>

  <xs:complexType name="sql-query" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="return-scalar" type="return-scalar"/>
      <xs:element name="return" type="return"/>
      <xs:element name="return-join" type="return-join"/>
      <xs:element name="load-collection" type="load-collection"/>
      <xs:element name="synchronize" type="synchronize"/>
      <xs:element name="query-param" type="query-param"/>
    </xs:choice>
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="resultset-ref"/>
    <xs:attribute ref="flush-mode"/>
    <xs:attribute ref="cacheable" default="false"/>
    <xs:attribute ref="cache-region"/>
    <xs:attribute ref="fetch-size"/>
    <xs:attribute ref="timeout"/>
    <xs:attribute ref="cache-mode"/>
    <xs:attribute ref="read-only"/>
    <xs:attribute ref="comment"/>
    <xs:attribute ref="callable" default="false"/>
  </xs:complexType>

  <xs:complexType name="query-param">
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="type" use="required"/>
  </xs:complexType>

  <xs:complexType name="resultset">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="return-scalar" type="return-scalar"/>
      <xs:element name="return" type="return"/>
      <xs:element name="return-join" type="return-join"/>
      <xs:element name="load-collection" type="load-collection"/>
    </xs:choice>
    <xs:attribute name="name" use="required"/>
  </xs:complexType>

  <xs:complexType name="return">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="return-discriminator" minOccurs="0">
        <xs:complexType>
          <xs:attribute ref="column" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="return-property" type="return-property"/>
    </xs:sequence>
    <xs:attribute ref="alias"/>
    <xs:attribute ref="entity-name"/>
    <xs:attribute ref="class"/>
    <xs:attribute ref="lock-mode" default="read"/>
  </xs:complexType>

  <xs:complexType name="return-property">
    <xs:sequence>
      <xs:element name="return-column" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="name" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute ref="column"/>
  </xs:complexType>

  <xs:complexType name="return-join">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="return-property" type="return-property"/>
    </xs:sequence>
    <xs:attribute ref="alias" use="required"/>
    <xs:attribute name="property" use="required"/>
    <xs:attribute ref="lock-mode" default="read"/>
  </xs:complexType>

  <xs:complexType name="load-collection">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="return-property" type="return-property"/>
    </xs:sequence>
    <xs:attribute ref="alias" use="required"/>
    <xs:attribute name="role" use="required"/>
    <xs:attribute ref="lock-mode" default="read"/>
  </xs:complexType>

  <xs:complexType name="return-scalar">
    <xs:attribute ref="column" use="required"/>
    <xs:attribute ref="type"/>
  </xs:complexType>

  <xs:complexType name="synchronize">
    <xs:attribute ref="table" use="required"/>
  </xs:complexType>

  <xs:complexType name="sql-insert" mixed="true">
    <xs:attribute ref="callable" default="false"/>
    <xs:attributeGroup ref="checkGroupEnum"/>
  </xs:complexType>

  <xs:complexType name="sql-update" mixed="true">
    <xs:attribute ref="callable" default="false"/>
    <xs:attributeGroup ref="checkGroupEnum"/>
  </xs:complexType>

  <xs:complexType name="sql-delete" mixed="true">
    <xs:attribute ref="callable" default="false"/>
    <xs:attributeGroup ref="checkGroupEnum"/>
  </xs:complexType>

  <xs:complexType name="sql-delete-all" mixed="true">
    <xs:attribute ref="callable" default="false"/>
    <xs:attributeGroup ref="checkGroupEnum"/>
  </xs:complexType>

  <xs:attributeGroup name="lazyGroupEnum2">
    <xs:attribute name="lazy">
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="lazyGroupEnum3">
    <xs:attribute name="lazy">
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="checkGroup">
    <xs:attribute name="check"/> <!-- default: none -->
  </xs:attributeGroup>

  <xs:attributeGroup name="checkGroupEnum">
    <xs:attribute name="check">
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="fetchGroupEnum2">
    <xs:attribute name="fetch">
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="fetchGroupEnum3">
    <xs:attribute name="fetch">
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attribute name="schema"/> <!-- default: none -->

  <xs:attribute name="catalog"/> <!-- default: none -->

  <xs:attribute name="class"/>

  <xs:attribute name="entity-name"/>

  <xs:attribute name="proxy"/> <!-- default: no proxy interface -->

  <xs:attribute name="table"/> <!-- default: unqualified classname -->

  <xs:attribute name="subselect"/>

  <xs:attribute name="discriminator-value"/> <!-- default: unqualified class name | none -->

  <xs:attribute name="mutable">
  </xs:attribute>

  <xs:attribute name="abstract">
  </xs:attribute>

  <xs:attribute name="where"/> <!-- default: none -->

  <xs:attribute name="persister"/>

  <xs:attribute name="dynamic-update">
  </xs:attribute>

  <xs:attribute name="dynamic-insert">
  </xs:attribute>

  <xs:attribute name="batch-size"/>

  <xs:attribute name="select-before-update">
  </xs:attribute>

  <xs:attribute name="node"/>

  <xs:attribute name="condition"/>

  <xs:attribute name="type"/> <!-- The parameter type -->

  <xs:attribute name="inverse">
  </xs:attribute>

  <xs:attribute name="access"/>

  <xs:attribute name="column"/>

  <xs:attribute name="length"/>

  <xs:attribute name="unsaved-value">
  </xs:attribute>

  <xs:attribute name="formula"/>

  <xs:attribute name="not-null">
  </xs:attribute>

  <xs:attribute name="insert">
  </xs:attribute>

  <xs:attribute name="generated">
  </xs:attribute>

  <xs:attribute name="extends"/> <!-- default: empty when a toplevel, otherwise the nearest class definition -->

  <xs:attribute name="precision"/>

  <xs:attribute name="scale"/>

  <xs:attribute name="unique">
  </xs:attribute>

  <xs:attribute name="unique-key"/>

  <xs:attribute name="index"/> <!-- include the columns spanned by this property in an index -->

  <xs:attribute name="update">
  </xs:attribute>

  <xs:attribute name="optimistic-lock">
  </xs:attribute>

  <xs:attribute name="cascade"/>

  <xs:attribute name="outer-join">
  </xs:attribute>

  <xs:attribute name="foreign-key"/>

  <xs:attribute name="property-ref"/>

  <xs:attribute name="not-found">
  </xs:attribute>

  <xs:attribute name="embed-xml">
  </xs:attribute>

  <xs:attribute name="id-type"/>

  <xs:attribute name="meta-type"/> <!--- default: Hibernate.STRING -->

  <xs:attribute name="sort"/> <!-- unsorted|natural|"comparator class", default: unsorted -->

  <xs:attribute name="order-by"/> <!-- default: none -->

  <xs:attribute name="collection-type"/>

  <xs:attribute name="flush-mode">
  </xs:attribute>

  <xs:attribute name="cacheable">
  </xs:attribute>

  <xs:attribute name="cache-region"/>

  <xs:attribute name="fetch-size"/>

  <xs:attribute name="timeout"/>

  <xs:attribute name="cache-mode">
  </xs:attribute>

  <xs:attribute name="read-only">
  </xs:attribute>

  <xs:attribute name="comment"/>

  <xs:attribute name="callable">
  </xs:attribute>

  <xs:attribute name="alias"/>

  <xs:attribute name="lock-mode">
  </xs:attribute>

</xs:schema>
